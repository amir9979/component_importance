valid,type,issue,module,commit,parent,testcase,has_test_annotation,traces,bugged_components,description,extra_description,blamed_components,diff
True,Regression,162,commons-email,b38dad810d3d79ca236e5214381e26f0ed7a06b2,124a46c64d8d963f67c0eaed2d345b7a98c23878,org.apache.commons.mail.SendWithAttachmentsTest.testSendWAttachments,False,[],,,,org.apache.commons.mail.email.setmailsession(session)@org.apache.commons.mail.email.getsmtpport()@org.apache.commons.mail.email.getmailsession(),u''
True,Regression,124,commons-email,f639e15f50e0192187bd77bb63ea5af6fb646a0d,ed451ccfe82779fbeb1f2bdde9d27ac4c75c7e63,org.apache.commons.mail.EmailTest.testSetHeadersEx,False,[],,,,org.apache.commons.mail.email.setheaders(map),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailLiveTest.java b/src/test/java/org/apache/commons/mail/EmailLiveTest.java\nindex fec0d93..4dccb48 100644\n--- a/src/test/java/org/apache/commons/mail/EmailLiveTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailLiveTest.java\n@@ -133,6 +133,21 @@ public class EmailLiveTest extends BaseEmailTestCase\n         EmailUtils.writeMimeMessage( new File(""./target/test-emails/simplemail.eml""), send(email).getMimeMessage());\n     }\n \n+    /**\n+     * A sanity check that a header folding works correctly.\n+     *\n+     * @throws Exception the test failed\n+     */\n+    public void testFoldedHeaderValue() throws Exception\n+    {\n+        SimpleEmail email = (SimpleEmail) create(SimpleEmail.class);\n+        email.setSubject(""TestFoldedHeaderMail"");\n+        email.setMsg(""This is a test mail with a folded header value... :-)"");\n+        email.addHeader(""X-TestHeader"", ""This is a very long header value which should be folded into two lines, hopefully"");\n+\n+        EmailUtils.writeMimeMessage( new File(""./target/test-emails/foldedheader.eml""), send(email).getMimeMessage());\n+    }\n+\n     /**\n      * A sanity check that a simple email also works in reality.\n      *'"
True,Regression,124,commons-email,8b9aad8d106f7445495c4d3188424f2bd98294cb,fab97868ec7ffe89e4052a31b22f0a43560c93cb,org.apache.commons.mail.EmailTest.testFoldingHeaders,False,[],,,,org.apache.commons.mail.email.setheaders(map),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex f13de3c..409ba1f 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -21,6 +21,7 @@ import java.io.UnsupportedEncodingException;\n import java.nio.charset.Charset;\n import java.nio.charset.IllegalCharsetNameException;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Calendar;\n import java.util.Date;\n import java.util.Hashtable;\n@@ -28,6 +29,8 @@ import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n+import java.util.StringTokenizer;\n+\n import javax.mail.Authenticator;\n import javax.mail.Session;\n import javax.mail.internet.AddressException;\n@@ -1098,11 +1101,35 @@ public class EmailTest extends BaseEmailTestCase\n         assertEquals(ht, this.email.getHeaders());\n     }\n \n-    public void testFoldingHeaders()\n+    public void testFoldingHeaders() throws Exception\n     {\n-        this.email.addHeader(""X-LongHeader"", ""1234567890 1234567890 123456789 01234567890 123456789 0123456789 01234567890 01234567890"");\n+        this.email.setHostName(this.strTestMailServer);\n+        this.email.setSmtpPort(this.getMailServerPort());\n+        this.email.setFrom(""a@b.com"");\n+        this.email.addTo(""c@d.com"");\n+        this.email.setSubject(""test mail"");\n+\n+        final String headerValue = ""1234567890 1234567890 123456789 01234567890 123456789 0123456789 01234567890 01234567890"";\n+        this.email.addHeader(""X-LongHeader"", headerValue);\n+        \n         assertTrue(this.email.getHeaders().size() == 1);\n-        assertTrue(this.email.getHeaders().get(""X-LongHeader"").toString().indexOf(""\\r\\n"") >= 0);\n+        // the header should not yet be folded -> will be done by buildMimeMessage()\n+        assertTrue(this.email.getHeaders().get(""X-LongHeader"").toString().indexOf(""\\r\\n"") == -1);\n+        \n+        this.email.buildMimeMessage();\n+\n+        MimeMessage msg = this.email.getMimeMessage();\n+        msg.saveChanges();\n+        \n+        String[] values = msg.getHeader(""X-LongHeader"");\n+        assertEquals(1, values.length);\n+        \n+        // the header should be split in two lines\n+        String[] lines = values[0].split(""\\\\r\\\\n"");\n+        assertEquals(2, lines.length);\n+        \n+        // there should only be one line-break\n+        assertTrue(values[0].indexOf(""\\n"") == values[0].lastIndexOf(""\\n""));\n     }\n \n     /** */'"
True,Regression,124,commons-email,8b9aad8d106f7445495c4d3188424f2bd98294cb,fab97868ec7ffe89e4052a31b22f0a43560c93cb,org.apache.commons.mail.EmailTest.testFoldingHeaders,False,[],,,,org.apache.commons.mail.email.setheaders(map),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex f13de3c..409ba1f 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -21,6 +21,7 @@ import java.io.UnsupportedEncodingException;\n import java.nio.charset.Charset;\n import java.nio.charset.IllegalCharsetNameException;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Calendar;\n import java.util.Date;\n import java.util.Hashtable;\n@@ -28,6 +29,8 @@ import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n+import java.util.StringTokenizer;\n+\n import javax.mail.Authenticator;\n import javax.mail.Session;\n import javax.mail.internet.AddressException;\n@@ -1098,11 +1101,35 @@ public class EmailTest extends BaseEmailTestCase\n         assertEquals(ht, this.email.getHeaders());\n     }\n \n-    public void testFoldingHeaders()\n+    public void testFoldingHeaders() throws Exception\n     {\n-        this.email.addHeader(""X-LongHeader"", ""1234567890 1234567890 123456789 01234567890 123456789 0123456789 01234567890 01234567890"");\n+        this.email.setHostName(this.strTestMailServer);\n+        this.email.setSmtpPort(this.getMailServerPort());\n+        this.email.setFrom(""a@b.com"");\n+        this.email.addTo(""c@d.com"");\n+        this.email.setSubject(""test mail"");\n+\n+        final String headerValue = ""1234567890 1234567890 123456789 01234567890 123456789 0123456789 01234567890 01234567890"";\n+        this.email.addHeader(""X-LongHeader"", headerValue);\n+        \n         assertTrue(this.email.getHeaders().size() == 1);\n-        assertTrue(this.email.getHeaders().get(""X-LongHeader"").toString().indexOf(""\\r\\n"") >= 0);\n+        // the header should not yet be folded -> will be done by buildMimeMessage()\n+        assertTrue(this.email.getHeaders().get(""X-LongHeader"").toString().indexOf(""\\r\\n"") == -1);\n+        \n+        this.email.buildMimeMessage();\n+\n+        MimeMessage msg = this.email.getMimeMessage();\n+        msg.saveChanges();\n+        \n+        String[] values = msg.getHeader(""X-LongHeader"");\n+        assertEquals(1, values.length);\n+        \n+        // the header should be split in two lines\n+        String[] lines = values[0].split(""\\\\r\\\\n"");\n+        assertEquals(2, lines.length);\n+        \n+        // there should only be one line-break\n+        assertTrue(values[0].indexOf(""\\n"") == values[0].lastIndexOf(""\\n""));\n     }\n \n     /** */'"
True,Regression,123,commons-email,346781eb0442198dcfc3106a07cce14751a2a691,0f74d102de3695395e2e2c31907a6fa6b599027c,org.apache.commons.mail.EmailTest.testSendEx,False,[],,,,org.apache.commons.mail.mocks.mockemailconcrete.getsubject()@org.apache.commons.mail.mocks.mockemailconcrete.getsmtpport(),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex 960860c..e11b7c8 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1271,6 +1271,29 @@ public class EmailTest extends BaseEmailTestCase\n             this.fakeMailServer.stop();\n             assertTrue(true);\n         }\n+        \n+        // validate that the correct smtp port is visible in the exception message\n+        // in case ssl connection is used\n+        try\n+        {\n+            this.getMailServer();\n+\n+            this.email = new MockEmailConcrete();\n+            this.email.setHostName(""bad.host.com"");\n+            this.email.setSSL(true);\n+            this.email.setFrom(this.strTestMailFrom);\n+            this.email.addTo(this.strTestMailTo);\n+            this.email.setAuthentication(null, null);\n+            this.email.send();\n+            fail(""Should have thrown an exception"");\n+        }\n+        catch (EmailException e)\n+        {\n+            assertTrue(e.getMessage().contains(""bad.host.com:465""));\n+            this.fakeMailServer.stop();\n+            assertTrue(true);\n+        }\n+        \n     }\n \n     /** */\n@@ -1428,5 +1451,5 @@ public class EmailTest extends BaseEmailTestCase\n         MimeMessage msg = this.email.getMimeMessage();\n         msg.saveChanges();\n         assertEquals(""image/png"", msg.getContentType());\n-    }\n+    }    \n }'"
True,Delta,116,commons-email,b9f88a773c72e590015736edad69181329a43d30,2976dd836797d11f3eb3f4d02d61feb6e7bde2e7,org.apache.commons.mail.resolver.DataSourceCompositeResolverTest.testExternalModification,False,[],,,,org.apache.commons.mail.resolver.datasourcecompositeresolver.getdatasourceresolvers(),"u'diff --git a/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java b/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java\nindex 23c219e..29041e2 100644\n--- a/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java\n+++ b/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java\n@@ -71,6 +71,24 @@ public class DataSourceCompositeResolverTest extends TestCase\n         }\n     }\n \n+    public void testExternalModification() throws Exception\n+    {\n+        DataSourceResolver urlResolver = new DataSourceUrlResolver(new URL(""http://www.apache.org""), false);\n+        DataSourceResolver classPathResolver = new DataSourceClassPathResolver(""/images"", false);\n+        DataSourceResolver[] dataSourceResolvers = new DataSourceResolver[] { urlResolver, classPathResolver };\n+        DataSourceCompositeResolver dataSourceResolver = new DataSourceCompositeResolver(dataSourceResolvers, true);\n+\n+        DataSourceResolver[] arr = dataSourceResolver.getDataSourceResolvers();\n+        \n+        // modify an element in the returned array\n+        arr[0] = null;\n+        \n+        DataSourceResolver[] arr2 = dataSourceResolver.getDataSourceResolvers();\n+        \n+        // assert that the external modification is not propagated to the internal array\n+        assertNotNull(arr2[0]);        \n+    }\n+\n     private byte[] toByteArray(DataSource dataSource) throws IOException\n     {\n         if(dataSource != null)'"
True,Delta,116,commons-email,b9f88a773c72e590015736edad69181329a43d30,2976dd836797d11f3eb3f4d02d61feb6e7bde2e7,org.apache.commons.mail.resolver.DataSourceCompositeResolverTest.testExternalModification,False,[],,,,org.apache.commons.mail.resolver.datasourcecompositeresolver.getdatasourceresolvers(),"u'diff --git a/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java b/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java\nindex 23c219e..29041e2 100644\n--- a/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java\n+++ b/src/test/org/apache/commons/mail/resolver/DataSourceCompositeResolverTest.java\n@@ -71,6 +71,24 @@ public class DataSourceCompositeResolverTest extends TestCase\n         }\n     }\n \n+    public void testExternalModification() throws Exception\n+    {\n+        DataSourceResolver urlResolver = new DataSourceUrlResolver(new URL(""http://www.apache.org""), false);\n+        DataSourceResolver classPathResolver = new DataSourceClassPathResolver(""/images"", false);\n+        DataSourceResolver[] dataSourceResolvers = new DataSourceResolver[] { urlResolver, classPathResolver };\n+        DataSourceCompositeResolver dataSourceResolver = new DataSourceCompositeResolver(dataSourceResolvers, true);\n+\n+        DataSourceResolver[] arr = dataSourceResolver.getDataSourceResolvers();\n+        \n+        // modify an element in the returned array\n+        arr[0] = null;\n+        \n+        DataSourceResolver[] arr2 = dataSourceResolver.getDataSourceResolvers();\n+        \n+        // assert that the external modification is not propagated to the internal array\n+        assertNotNull(arr2[0]);        \n+    }\n+\n     private byte[] toByteArray(DataSource dataSource) throws IOException\n     {\n         if(dataSource != null)'"
True,Delta,98,commons-email,ced77471d2ae9acb16aad22f7701d987bfc91b28,d501c626baef05f116f34af0a7661569008aecb5,org.apache.commons.mail.EmailTest.testFoldingHeaders,False,[],,,,org.apache.commons.mail.email.buildmimemessage()@org.apache.commons.mail.email.setheaders(map),"u'diff --git a/src/test/org/apache/commons/mail/EmailTest.java b/src/test/org/apache/commons/mail/EmailTest.java\nindex fc23f1b..897bb65 100644\n--- a/src/test/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/org/apache/commons/mail/EmailTest.java\n@@ -56,7 +56,7 @@ public class EmailTest extends BaseEmailTestCase\n \n     /** mock for testing */\n     private MockEmailConcrete email;\n-\n+                       \n     /**\n      * @param name test name\n      */\n@@ -1103,9 +1103,6 @@ public class EmailTest extends BaseEmailTestCase\n     /** */\n     public void testSetHeaders()\n     {\n-        // ====================================================================\n-        // Test Success\n-        // ====================================================================\n         Map ht = new Hashtable();\n         ht.put(""X-Priority"", ""1"");\n         ht.put(""Disposition-Notification-To"", ""me@home.com"");\n@@ -1117,6 +1114,13 @@ public class EmailTest extends BaseEmailTestCase\n         assertEquals(ht, this.email.getHeaders());\n     }\n \n+    public void testFoldingHeaders()\n+    {\n+        this.email.addHeader(""X-LongHeader"", ""1234567890 1234567890 123456789 01234567890 123456789 0123456789 01234567890 01234567890"");\n+        assertTrue(this.email.getHeaders().size() == 1);\n+        assertTrue(this.email.getHeaders().get(""X-LongHeader"").toString().contains(""\\r\\n""));\n+    }\n+\n     /** */\n     public void testSetHeadersEx()\n     {'"
True,Delta,98,commons-email,ced77471d2ae9acb16aad22f7701d987bfc91b28,d501c626baef05f116f34af0a7661569008aecb5,org.apache.commons.mail.EmailTest.testFoldingHeaders,False,[],,,,org.apache.commons.mail.email.buildmimemessage()@org.apache.commons.mail.email.setheaders(map),"u'diff --git a/src/test/org/apache/commons/mail/EmailTest.java b/src/test/org/apache/commons/mail/EmailTest.java\nindex fc23f1b..897bb65 100644\n--- a/src/test/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/org/apache/commons/mail/EmailTest.java\n@@ -56,7 +56,7 @@ public class EmailTest extends BaseEmailTestCase\n \n     /** mock for testing */\n     private MockEmailConcrete email;\n-\n+                       \n     /**\n      * @param name test name\n      */\n@@ -1103,9 +1103,6 @@ public class EmailTest extends BaseEmailTestCase\n     /** */\n     public void testSetHeaders()\n     {\n-        // ====================================================================\n-        // Test Success\n-        // ====================================================================\n         Map ht = new Hashtable();\n         ht.put(""X-Priority"", ""1"");\n         ht.put(""Disposition-Notification-To"", ""me@home.com"");\n@@ -1117,6 +1114,13 @@ public class EmailTest extends BaseEmailTestCase\n         assertEquals(ht, this.email.getHeaders());\n     }\n \n+    public void testFoldingHeaders()\n+    {\n+        this.email.addHeader(""X-LongHeader"", ""1234567890 1234567890 123456789 01234567890 123456789 0123456789 01234567890 01234567890"");\n+        assertTrue(this.email.getHeaders().size() == 1);\n+        assertTrue(this.email.getHeaders().get(""X-LongHeader"").toString().contains(""\\r\\n""));\n+    }\n+\n     /** */\n     public void testSetHeadersEx()\n     {'"
True,Regression,-1,commons-email,e29f887df4e3102397b2ffa528a3db15ceb8d4f6,4ad899d8b9a77c86fdfd598895c0dee0624427e2,org.apache.commons.mail.SendWithAttachmentsTest.testSendWAttachments,False,[],,,,org.apache.commons.mail.util.idnemailaddressconverter.tounicode(string)@org.apache.commons.mail.email.getheader(string)@org.apache.commons.mail.util.idnemailaddressconverter.tounicode(internetaddress)@org.apache.commons.mail.email.setbounceaddress(string)@org.apache.commons.mail.util.idnemailaddressconverter.toascii(string),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex dbf5996..3aeafb2 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1264,7 +1264,20 @@ public class EmailTest extends AbstractEmailTest\n         email.setBounceAddress(bounceAddress);\n \n         // tests\n-        assertEquals(bounceAddress, email.getBounceAddress());        \n+        assertEquals(bounceAddress, email.getBounceAddress());\n+    }\n+\n+    @Test\n+    public void testSetNullAndEmptyBounceAddress()\n+    {\n+        assertNull(email.setBounceAddress(null).getBounceAddress());\n+        assertNull(email.setBounceAddress("""").getBounceAddress());\n+    }\n+\n+    @Test(expected = RuntimeException.class)\n+    public void testGetSetInvalidBounceAddress()\n+    {\n+        email.setBounceAddress(""invalid-bounce-address"");\n     }\n \n     @Test\ndiff --git a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\nindex 93a25aa..db57225 100644\n--- a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n+++ b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n@@ -62,6 +62,13 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(""noreply@xn--dmin-moa0i.example"", idnEmailConverter.toASCII(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n     }\n \n+    @Test\n+    public void testNonIDNEmailAddressToAsciiConversion()\n+    {\n+        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n+    }\n+\n+\n     @Test\n     public void testInternetAddressToAsciiConversion() throws Exception\n     {\n@@ -72,18 +79,6 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, idnEmailConverter.toUnicode(addressWithPersonalName));\n     }\n \n-    @Test\n-    public void testInternetAddressCollectionToAsciiConversion() throws Exception\n-    {\n-        Collection<InternetAddress> addresses = new ArrayList<InternetAddress>();\n-        addresses.add(new InternetAddress(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n-\n-        Collection<String> emails = idnEmailConverter.toUnicode(addresses);\n-\n-        assertEquals(1, emails.size());\n-        assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, emails.iterator().next());\n-    }\n-\n     @Test\n     public void testRoundTripConversionOfIDNEmailAddress()\n     {\n@@ -93,9 +88,4 @@ public class IDNEmailAddressConverterTest {\n         }\n     }\n \n-    @Test\n-    public void testNonIDNEmailAddressToAsciiConversion()\n-    {\n-        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n-    }\n }'"
True,Delta,-1,commons-email,e29f887df4e3102397b2ffa528a3db15ceb8d4f6,4ad899d8b9a77c86fdfd598895c0dee0624427e2,org.apache.commons.mail.EmailTest.testSetNullAndEmptyBounceAddress,False,[],,,,org.apache.commons.mail.util.idnemailaddressconverter.tounicode(string)@org.apache.commons.mail.email.getheader(string)@org.apache.commons.mail.util.idnemailaddressconverter.tounicode(internetaddress)@org.apache.commons.mail.email.setbounceaddress(string)@org.apache.commons.mail.util.idnemailaddressconverter.toascii(string),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex dbf5996..3aeafb2 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1264,7 +1264,20 @@ public class EmailTest extends AbstractEmailTest\n         email.setBounceAddress(bounceAddress);\n \n         // tests\n-        assertEquals(bounceAddress, email.getBounceAddress());        \n+        assertEquals(bounceAddress, email.getBounceAddress());\n+    }\n+\n+    @Test\n+    public void testSetNullAndEmptyBounceAddress()\n+    {\n+        assertNull(email.setBounceAddress(null).getBounceAddress());\n+        assertNull(email.setBounceAddress("""").getBounceAddress());\n+    }\n+\n+    @Test(expected = RuntimeException.class)\n+    public void testGetSetInvalidBounceAddress()\n+    {\n+        email.setBounceAddress(""invalid-bounce-address"");\n     }\n \n     @Test\ndiff --git a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\nindex 93a25aa..db57225 100644\n--- a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n+++ b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n@@ -62,6 +62,13 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(""noreply@xn--dmin-moa0i.example"", idnEmailConverter.toASCII(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n     }\n \n+    @Test\n+    public void testNonIDNEmailAddressToAsciiConversion()\n+    {\n+        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n+    }\n+\n+\n     @Test\n     public void testInternetAddressToAsciiConversion() throws Exception\n     {\n@@ -72,18 +79,6 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, idnEmailConverter.toUnicode(addressWithPersonalName));\n     }\n \n-    @Test\n-    public void testInternetAddressCollectionToAsciiConversion() throws Exception\n-    {\n-        Collection<InternetAddress> addresses = new ArrayList<InternetAddress>();\n-        addresses.add(new InternetAddress(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n-\n-        Collection<String> emails = idnEmailConverter.toUnicode(addresses);\n-\n-        assertEquals(1, emails.size());\n-        assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, emails.iterator().next());\n-    }\n-\n     @Test\n     public void testRoundTripConversionOfIDNEmailAddress()\n     {\n@@ -93,9 +88,4 @@ public class IDNEmailAddressConverterTest {\n         }\n     }\n \n-    @Test\n-    public void testNonIDNEmailAddressToAsciiConversion()\n-    {\n-        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n-    }\n }'"
True,Delta,-1,commons-email,e29f887df4e3102397b2ffa528a3db15ceb8d4f6,4ad899d8b9a77c86fdfd598895c0dee0624427e2,org.apache.commons.mail.EmailTest.testSetNullAndEmptyBounceAddress,False,[],,,,org.apache.commons.mail.util.idnemailaddressconverter.tounicode(string)@org.apache.commons.mail.email.getheader(string)@org.apache.commons.mail.util.idnemailaddressconverter.tounicode(internetaddress)@org.apache.commons.mail.email.setbounceaddress(string)@org.apache.commons.mail.util.idnemailaddressconverter.toascii(string),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex dbf5996..3aeafb2 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1264,7 +1264,20 @@ public class EmailTest extends AbstractEmailTest\n         email.setBounceAddress(bounceAddress);\n \n         // tests\n-        assertEquals(bounceAddress, email.getBounceAddress());        \n+        assertEquals(bounceAddress, email.getBounceAddress());\n+    }\n+\n+    @Test\n+    public void testSetNullAndEmptyBounceAddress()\n+    {\n+        assertNull(email.setBounceAddress(null).getBounceAddress());\n+        assertNull(email.setBounceAddress("""").getBounceAddress());\n+    }\n+\n+    @Test(expected = RuntimeException.class)\n+    public void testGetSetInvalidBounceAddress()\n+    {\n+        email.setBounceAddress(""invalid-bounce-address"");\n     }\n \n     @Test\ndiff --git a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\nindex 93a25aa..db57225 100644\n--- a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n+++ b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n@@ -62,6 +62,13 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(""noreply@xn--dmin-moa0i.example"", idnEmailConverter.toASCII(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n     }\n \n+    @Test\n+    public void testNonIDNEmailAddressToAsciiConversion()\n+    {\n+        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n+    }\n+\n+\n     @Test\n     public void testInternetAddressToAsciiConversion() throws Exception\n     {\n@@ -72,18 +79,6 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, idnEmailConverter.toUnicode(addressWithPersonalName));\n     }\n \n-    @Test\n-    public void testInternetAddressCollectionToAsciiConversion() throws Exception\n-    {\n-        Collection<InternetAddress> addresses = new ArrayList<InternetAddress>();\n-        addresses.add(new InternetAddress(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n-\n-        Collection<String> emails = idnEmailConverter.toUnicode(addresses);\n-\n-        assertEquals(1, emails.size());\n-        assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, emails.iterator().next());\n-    }\n-\n     @Test\n     public void testRoundTripConversionOfIDNEmailAddress()\n     {\n@@ -93,9 +88,4 @@ public class IDNEmailAddressConverterTest {\n         }\n     }\n \n-    @Test\n-    public void testNonIDNEmailAddressToAsciiConversion()\n-    {\n-        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n-    }\n }'"
True,Delta,-1,commons-email,e29f887df4e3102397b2ffa528a3db15ceb8d4f6,4ad899d8b9a77c86fdfd598895c0dee0624427e2,org.apache.commons.mail.EmailTest.testGetSetInvalidBounceAddress,False,[],,,,org.apache.commons.mail.util.idnemailaddressconverter.tounicode(string)@org.apache.commons.mail.email.getheader(string)@org.apache.commons.mail.util.idnemailaddressconverter.tounicode(internetaddress)@org.apache.commons.mail.email.setbounceaddress(string)@org.apache.commons.mail.util.idnemailaddressconverter.toascii(string),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex dbf5996..3aeafb2 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1264,7 +1264,20 @@ public class EmailTest extends AbstractEmailTest\n         email.setBounceAddress(bounceAddress);\n \n         // tests\n-        assertEquals(bounceAddress, email.getBounceAddress());        \n+        assertEquals(bounceAddress, email.getBounceAddress());\n+    }\n+\n+    @Test\n+    public void testSetNullAndEmptyBounceAddress()\n+    {\n+        assertNull(email.setBounceAddress(null).getBounceAddress());\n+        assertNull(email.setBounceAddress("""").getBounceAddress());\n+    }\n+\n+    @Test(expected = RuntimeException.class)\n+    public void testGetSetInvalidBounceAddress()\n+    {\n+        email.setBounceAddress(""invalid-bounce-address"");\n     }\n \n     @Test\ndiff --git a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\nindex 93a25aa..db57225 100644\n--- a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n+++ b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n@@ -62,6 +62,13 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(""noreply@xn--dmin-moa0i.example"", idnEmailConverter.toASCII(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n     }\n \n+    @Test\n+    public void testNonIDNEmailAddressToAsciiConversion()\n+    {\n+        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n+    }\n+\n+\n     @Test\n     public void testInternetAddressToAsciiConversion() throws Exception\n     {\n@@ -72,18 +79,6 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, idnEmailConverter.toUnicode(addressWithPersonalName));\n     }\n \n-    @Test\n-    public void testInternetAddressCollectionToAsciiConversion() throws Exception\n-    {\n-        Collection<InternetAddress> addresses = new ArrayList<InternetAddress>();\n-        addresses.add(new InternetAddress(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n-\n-        Collection<String> emails = idnEmailConverter.toUnicode(addresses);\n-\n-        assertEquals(1, emails.size());\n-        assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, emails.iterator().next());\n-    }\n-\n     @Test\n     public void testRoundTripConversionOfIDNEmailAddress()\n     {\n@@ -93,9 +88,4 @@ public class IDNEmailAddressConverterTest {\n         }\n     }\n \n-    @Test\n-    public void testNonIDNEmailAddressToAsciiConversion()\n-    {\n-        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n-    }\n }'"
True,Delta,-1,commons-email,e29f887df4e3102397b2ffa528a3db15ceb8d4f6,4ad899d8b9a77c86fdfd598895c0dee0624427e2,org.apache.commons.mail.EmailTest.testGetSetInvalidBounceAddress,False,[],,,,org.apache.commons.mail.util.idnemailaddressconverter.tounicode(string)@org.apache.commons.mail.email.getheader(string)@org.apache.commons.mail.util.idnemailaddressconverter.tounicode(internetaddress)@org.apache.commons.mail.email.setbounceaddress(string)@org.apache.commons.mail.util.idnemailaddressconverter.toascii(string),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex dbf5996..3aeafb2 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1264,7 +1264,20 @@ public class EmailTest extends AbstractEmailTest\n         email.setBounceAddress(bounceAddress);\n \n         // tests\n-        assertEquals(bounceAddress, email.getBounceAddress());        \n+        assertEquals(bounceAddress, email.getBounceAddress());\n+    }\n+\n+    @Test\n+    public void testSetNullAndEmptyBounceAddress()\n+    {\n+        assertNull(email.setBounceAddress(null).getBounceAddress());\n+        assertNull(email.setBounceAddress("""").getBounceAddress());\n+    }\n+\n+    @Test(expected = RuntimeException.class)\n+    public void testGetSetInvalidBounceAddress()\n+    {\n+        email.setBounceAddress(""invalid-bounce-address"");\n     }\n \n     @Test\ndiff --git a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\nindex 93a25aa..db57225 100644\n--- a/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n+++ b/src/test/java/org/apache/commons/mail/util/IDNEmailAddressConverterTest.java\n@@ -62,6 +62,13 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(""noreply@xn--dmin-moa0i.example"", idnEmailConverter.toASCII(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n     }\n \n+    @Test\n+    public void testNonIDNEmailAddressToAsciiConversion()\n+    {\n+        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n+    }\n+\n+\n     @Test\n     public void testInternetAddressToAsciiConversion() throws Exception\n     {\n@@ -72,18 +79,6 @@ public class IDNEmailAddressConverterTest {\n         assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, idnEmailConverter.toUnicode(addressWithPersonalName));\n     }\n \n-    @Test\n-    public void testInternetAddressCollectionToAsciiConversion() throws Exception\n-    {\n-        Collection<InternetAddress> addresses = new ArrayList<InternetAddress>();\n-        addresses.add(new InternetAddress(idnEmailConverter.toASCII(AUSTRIAN_IDN_EMAIL_ADDRESS)));\n-\n-        Collection<String> emails = idnEmailConverter.toUnicode(addresses);\n-\n-        assertEquals(1, emails.size());\n-        assertEquals(AUSTRIAN_IDN_EMAIL_ADDRESS, emails.iterator().next());\n-    }\n-\n     @Test\n     public void testRoundTripConversionOfIDNEmailAddress()\n     {\n@@ -93,9 +88,4 @@ public class IDNEmailAddressConverterTest {\n         }\n     }\n \n-    @Test\n-    public void testNonIDNEmailAddressToAsciiConversion()\n-    {\n-        assertEquals(""me@home.com"", idnEmailConverter.toASCII(""me@home.com""));\n-    }\n }'"
True,Regression,-1,commons-email,c8ff82409e7f56cc9463e4d83cb5273ce7455441,4652bffa043470a3cde63bbb5d5be19f040ed8f7,org.apache.commons.mail.EmailTest.testSetNullAndEmptyBounceAddress,False,[],,,,org.apache.commons.mail.email.setbounceaddress(string),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex 211cb53..acf7e2f 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1286,7 +1286,7 @@ public class EmailTest extends AbstractEmailTest\n     public void testSetNullAndEmptyBounceAddress()\n     {\n         assertNull(email.setBounceAddress(null).getBounceAddress());\n-        assertNull(email.setBounceAddress("""").getBounceAddress());\n+        assertEquals("""", email.setBounceAddress("""").getBounceAddress());\n     }\n \n     @Test(expected = RuntimeException.class)'"
True,Regression,-1,commons-email,c8ff82409e7f56cc9463e4d83cb5273ce7455441,4652bffa043470a3cde63bbb5d5be19f040ed8f7,org.apache.commons.mail.EmailTest.testSetNullAndEmptyBounceAddress,False,[],,,,org.apache.commons.mail.email.setbounceaddress(string),"u'diff --git a/src/test/java/org/apache/commons/mail/EmailTest.java b/src/test/java/org/apache/commons/mail/EmailTest.java\nindex 211cb53..acf7e2f 100644\n--- a/src/test/java/org/apache/commons/mail/EmailTest.java\n+++ b/src/test/java/org/apache/commons/mail/EmailTest.java\n@@ -1286,7 +1286,7 @@ public class EmailTest extends AbstractEmailTest\n     public void testSetNullAndEmptyBounceAddress()\n     {\n         assertNull(email.setBounceAddress(null).getBounceAddress());\n-        assertNull(email.setBounceAddress("""").getBounceAddress());\n+        assertEquals("""", email.setBounceAddress("""").getBounceAddress());\n     }\n \n     @Test(expected = RuntimeException.class)'"
