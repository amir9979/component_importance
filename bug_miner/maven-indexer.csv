valid,type,issue,module,commit,parent,testcase,has_test_annotation,traces,bugged_components,description,extra_description,blamed_components,diff
True,Delta,114,indexer-core,915530e242b9e5b509b8d2ead796b6a79258ec23,29c0bff54f8a9a8c16a3e6a5a20bfcd1bd65348c,org.apache.maven.index.creator.JarFileContentsIndexCreatorTest.test_nexus_2318_indexZipWithClasses,False,[],,,,org.apache.maven.index.creator.jarfilecontentsindexcreator.populateartifactinfo(artifactcontext),"u'diff --git a/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java b/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java\nindex 7d559fc..8032706 100644\n--- a/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java\n+++ b/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java\n@@ -59,6 +59,44 @@ public class JarFileContentsIndexCreatorTest\n         assertNotNull( ""Classes should not be null"", artifactContext.getArtifactInfo().getClassNames() );\n     }\n \n+    public void test_nexus_2318_indexZipWithClasses()\n+            throws Exception\n+    {\n+        File artifact = new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0.zip"" );\n+\n+        File pom = new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0.pom"" );\n+\n+        ArtifactInfo artifactInfo = new ArtifactInfo( ""test"", ""aopalliance"", ""aopalliance"", ""1.0"", null, ""zip"" );\n+\n+        ArtifactContext artifactContext = new ArtifactContext( pom, artifact, null, artifactInfo, null );\n+\n+        indexCreator.populateArtifactInfo( artifactContext );\n+\n+        assertNotNull( ""Classes should not be null"", artifactContext.getArtifactInfo().getClassNames() );\n+\n+        String[] classNames = artifactContext.getArtifactInfo().getClassNames().split(""\\n"");\n+\n+        assertEquals(""Unexpected classes length"", 9, classNames.length );\n+\n+        assertEquals(""Advice class was expected"", ""/org/aopalliance/aop/Advice"", classNames[0] );\n+\n+        assertEquals(""AspectException class was expected"", ""/org/aopalliance/aop/AspectException"", classNames[1] );\n+\n+        assertEquals(""ConstructorInterceptor class was expected"", ""/org/aopalliance/intercept/ConstructorInterceptor"", classNames[2] );\n+\n+        assertEquals(""ConstructorInvocation class was expected"", ""/org/aopalliance/intercept/ConstructorInvocation"", classNames[3] );\n+\n+        assertEquals(""Interceptor class was expected"", ""/org/aopalliance/intercept/Interceptor"", classNames[4] );\n+\n+        assertEquals(""Invocation class was expected"", ""/org/aopalliance/intercept/Invocation"", classNames[5] );\n+\n+        assertEquals(""Joinpoint class was expected"", ""/org/aopalliance/intercept/Joinpoint"", classNames[6] );\n+\n+        assertEquals(""MethodInterceptor class was expected"", ""/org/aopalliance/intercept/MethodInterceptor"", classNames[7] );\n+\n+        assertEquals(""MethodInvocation class was expected"", ""/org/aopalliance/intercept/MethodInvocation"", classNames[8] );\n+    }\n+\n     public void test_nexus_2318_indexJarWithSources()\n         throws Exception\n     {\n@@ -76,6 +114,23 @@ public class JarFileContentsIndexCreatorTest\n         assertNull( ""Classes should be null"", artifactContext.getArtifactInfo().getClassNames() );\n     }\n \n+    public void test_nexus_2318_indexZipWithSources()\n+            throws Exception\n+    {\n+        File artifact =\n+                new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0-sources.zip"" );\n+\n+        File pom = new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0.pom"" );\n+\n+        ArtifactInfo artifactInfo = new ArtifactInfo( ""test"", ""aopalliance"", ""aopalliance"", ""1.0"", null, ""zip"" );\n+\n+        ArtifactContext artifactContext = new ArtifactContext( pom, artifact, null, artifactInfo, null );\n+\n+        indexCreator.populateArtifactInfo( artifactContext );\n+\n+        assertNull( ""Classes should be null"", artifactContext.getArtifactInfo().getClassNames() );\n+    }\n+\n     public void testMindexer35ScanWar()\n         throws Exception\n     {'"
True,Delta,114,indexer-core,915530e242b9e5b509b8d2ead796b6a79258ec23,29c0bff54f8a9a8c16a3e6a5a20bfcd1bd65348c,org.apache.maven.index.creator.JarFileContentsIndexCreatorTest.test_nexus_2318_indexZipWithClasses,False,[],,,,org.apache.maven.index.creator.jarfilecontentsindexcreator.populateartifactinfo(artifactcontext),"u'diff --git a/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java b/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java\nindex 7d559fc..8032706 100644\n--- a/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java\n+++ b/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java\n@@ -59,6 +59,44 @@ public class JarFileContentsIndexCreatorTest\n         assertNotNull( ""Classes should not be null"", artifactContext.getArtifactInfo().getClassNames() );\n     }\n \n+    public void test_nexus_2318_indexZipWithClasses()\n+            throws Exception\n+    {\n+        File artifact = new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0.zip"" );\n+\n+        File pom = new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0.pom"" );\n+\n+        ArtifactInfo artifactInfo = new ArtifactInfo( ""test"", ""aopalliance"", ""aopalliance"", ""1.0"", null, ""zip"" );\n+\n+        ArtifactContext artifactContext = new ArtifactContext( pom, artifact, null, artifactInfo, null );\n+\n+        indexCreator.populateArtifactInfo( artifactContext );\n+\n+        assertNotNull( ""Classes should not be null"", artifactContext.getArtifactInfo().getClassNames() );\n+\n+        String[] classNames = artifactContext.getArtifactInfo().getClassNames().split(""\\n"");\n+\n+        assertEquals(""Unexpected classes length"", 9, classNames.length );\n+\n+        assertEquals(""Advice class was expected"", ""/org/aopalliance/aop/Advice"", classNames[0] );\n+\n+        assertEquals(""AspectException class was expected"", ""/org/aopalliance/aop/AspectException"", classNames[1] );\n+\n+        assertEquals(""ConstructorInterceptor class was expected"", ""/org/aopalliance/intercept/ConstructorInterceptor"", classNames[2] );\n+\n+        assertEquals(""ConstructorInvocation class was expected"", ""/org/aopalliance/intercept/ConstructorInvocation"", classNames[3] );\n+\n+        assertEquals(""Interceptor class was expected"", ""/org/aopalliance/intercept/Interceptor"", classNames[4] );\n+\n+        assertEquals(""Invocation class was expected"", ""/org/aopalliance/intercept/Invocation"", classNames[5] );\n+\n+        assertEquals(""Joinpoint class was expected"", ""/org/aopalliance/intercept/Joinpoint"", classNames[6] );\n+\n+        assertEquals(""MethodInterceptor class was expected"", ""/org/aopalliance/intercept/MethodInterceptor"", classNames[7] );\n+\n+        assertEquals(""MethodInvocation class was expected"", ""/org/aopalliance/intercept/MethodInvocation"", classNames[8] );\n+    }\n+\n     public void test_nexus_2318_indexJarWithSources()\n         throws Exception\n     {\n@@ -76,6 +114,23 @@ public class JarFileContentsIndexCreatorTest\n         assertNull( ""Classes should be null"", artifactContext.getArtifactInfo().getClassNames() );\n     }\n \n+    public void test_nexus_2318_indexZipWithSources()\n+            throws Exception\n+    {\n+        File artifact =\n+                new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0-sources.zip"" );\n+\n+        File pom = new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0.pom"" );\n+\n+        ArtifactInfo artifactInfo = new ArtifactInfo( ""test"", ""aopalliance"", ""aopalliance"", ""1.0"", null, ""zip"" );\n+\n+        ArtifactContext artifactContext = new ArtifactContext( pom, artifact, null, artifactInfo, null );\n+\n+        indexCreator.populateArtifactInfo( artifactContext );\n+\n+        assertNull( ""Classes should be null"", artifactContext.getArtifactInfo().getClassNames() );\n+    }\n+\n     public void testMindexer35ScanWar()\n         throws Exception\n     {'"
True,Regression,101,indexer-core,ceb8388e9ca6766877f57901054861bbb713f35f,6cb2fcbe47883cd0decac0295493bef6577d7eb4,org.apache.maven.index.SearchWithAnEmptyIndexTest.testWithTwoContextWithOneEmptyFirstInContextsListSearchFlat,False,[],,,,org.apache.maven.index.creator.osgiartifactindexcreator.getindexerfields(),"u'diff --git a/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java b/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java\nindex 9745dd4..ad10a1d 100644\n--- a/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java\n+++ b/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java\n@@ -40,14 +40,10 @@ import java.util.List;\n public class SearchWithAnEmptyIndexTest\n     extends AbstractTestSupport\n {\n-    protected List<IndexCreator> indexCreators;\n-\n-    private NexusIndexer nexusIndexer;\n-\n     static final String INDEX_ID1 = ""osgi-test1"";\n-\n     static final String INDEX_ID2 = ""empty-repo"";\n-\n+    protected List<IndexCreator> indexCreators;\n+    private NexusIndexer nexusIndexer;\n     private IndexPacker indexPacker;\n \n     @Override\n@@ -119,7 +115,7 @@ public class SearchWithAnEmptyIndexTest\n \n             response = nexusIndexer.searchFlat( request );\n \n-            assertEquals( 2, response.getResults().size() );\n+            assertEquals(3, response.getResults().size());\n \n             String term = ""org.apache.karaf.features"";\n \n@@ -143,7 +139,7 @@ public class SearchWithAnEmptyIndexTest\n \n             System.out.println( "" result size with term usage "" + response.getResults().size() );\n \n-            assertEquals( 3, response.getResults().size() );\n+            assertEquals(4, response.getResults().size());\n \n         }\n         finally'"
True,Regression,101,indexer-core,ceb8388e9ca6766877f57901054861bbb713f35f,6cb2fcbe47883cd0decac0295493bef6577d7eb4,org.apache.maven.index.SearchWithAnEmptyIndexTest.testWithTwoContextWithOneEmptyFirstInContextsListSearchFlat,False,[],,,,org.apache.maven.index.creator.osgiartifactindexcreator.getindexerfields(),"u'diff --git a/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java b/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java\nindex 9745dd4..ad10a1d 100644\n--- a/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java\n+++ b/indexer-core/src/test/java/org/apache/maven/index/SearchWithAnEmptyIndexTest.java\n@@ -40,14 +40,10 @@ import java.util.List;\n public class SearchWithAnEmptyIndexTest\n     extends AbstractTestSupport\n {\n-    protected List<IndexCreator> indexCreators;\n-\n-    private NexusIndexer nexusIndexer;\n-\n     static final String INDEX_ID1 = ""osgi-test1"";\n-\n     static final String INDEX_ID2 = ""empty-repo"";\n-\n+    protected List<IndexCreator> indexCreators;\n+    private NexusIndexer nexusIndexer;\n     private IndexPacker indexPacker;\n \n     @Override\n@@ -119,7 +115,7 @@ public class SearchWithAnEmptyIndexTest\n \n             response = nexusIndexer.searchFlat( request );\n \n-            assertEquals( 2, response.getResults().size() );\n+            assertEquals(3, response.getResults().size());\n \n             String term = ""org.apache.karaf.features"";\n \n@@ -143,7 +139,7 @@ public class SearchWithAnEmptyIndexTest\n \n             System.out.println( "" result size with term usage "" + response.getResults().size() );\n \n-            assertEquals( 3, response.getResults().size() );\n+            assertEquals(4, response.getResults().size());\n \n         }\n         finally'"
