valid,type,issue,module,commit,parent,testcase,has_test_annotation,traces,bugged_components,description,extra_description,blamed_components,diff
True,Delta,485,qpid-jms-client,a39599e376c82421e3e200188f46d3a652c4f63d,458489ac08d0af0bd2a0025fc71c6c9c2906a290,org.apache.qpid.jms.provider.amqp.message.AmqpJmsBytesMessageFacadeTest.testCopyOfContentType,False,[],,,,org.apache.qpid.jms.provider.amqp.message.amqpjmsmessagefacade.getcontenttype(),"u'diff --git a/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java b/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java\nindex e982bedc..e4196c89 100644\n--- a/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java\n+++ b/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java\n@@ -33,6 +33,7 @@ import java.util.ArrayList;\n import java.util.Arrays;\n \n import org.apache.qpid.proton.amqp.Binary;\n+import org.apache.qpid.proton.amqp.Symbol;\n import org.apache.qpid.proton.amqp.messaging.AmqpSequence;\n import org.apache.qpid.proton.amqp.messaging.AmqpValue;\n import org.apache.qpid.proton.amqp.messaging.Data;\n@@ -85,19 +86,6 @@ public class AmqpJmsBytesMessageFacadeTest extends AmqpJmsMessageTypesTestCase {\n         assertEquals(""Message reports unexpected length"", 0, amqpBytesMessageFacade.getBodyLength());\n     }\n \n-    @Test\n-    public void testNewMessageHasContentType() throws Exception {\n-        AmqpJmsBytesMessageFacade amqpBytesMessageFacade = createNewBytesMessageFacade();\n-\n-        Properties properties = amqpBytesMessageFacade.getProperties();\n-        assertNotNull(properties);\n-        assertNotNull(properties.getContentType());\n-\n-        String contentType = properties.getContentType().toString();\n-        assertNotNull(""content type should be set"", contentType);\n-        assertEquals(""application/octet-stream"", contentType);\n-    }\n-\n     // ---------- test for normal message operations -------------------------//\n \n     @Test\n@@ -171,6 +159,34 @@ public class AmqpJmsBytesMessageFacadeTest extends AmqpJmsMessageTypesTestCase {\n         assertDataBodyAsExpected(copy.getBody(), 0);\n     }\n \n+    @Test\n+    public void testCopyOfContentType() throws Exception {\n+        AmqpJmsBytesMessageFacade amqpBytesMessageFacade1 = createNewBytesMessageFacade();\n+        AmqpJmsBytesMessageFacade copy1 = amqpBytesMessageFacade1.copy();\n+        assertNull(copy1.getContentType());\n+\n+        AmqpJmsBytesMessageFacade amqpBytesMessageFacade2 = createNewBytesMessageFacade();\n+        Symbol contentType = Symbol.valueOf(""content-type"");\n+        amqpBytesMessageFacade2.setContentType(contentType);\n+\n+        AmqpJmsBytesMessageFacade copy2 = amqpBytesMessageFacade2.copy();\n+        assertEquals(contentType, copy2.getContentType());\n+    }\n+\n+    @Test\n+    public void testMessageToSendHasContentTypeSet() throws Exception {\n+        AmqpJmsBytesMessageFacade amqpBytesMessageFacade = createNewBytesMessageFacade();\n+        amqpBytesMessageFacade.onSend(0);\n+\n+        Properties properties = amqpBytesMessageFacade.getProperties();\n+        assertNotNull(properties);\n+        assertNotNull(properties.getContentType());\n+\n+        String contentType = properties.getContentType().toString();\n+        assertNotNull(""content type should be set"", contentType);\n+        assertEquals(""application/octet-stream"", contentType);\n+    }\n+\n     /**\n      * Test that copying a new messages which has a body and the copy has getOutputStream\n      * called which clears the message body doesn\'t affect the original.'"
True,Delta,485,qpid-jms-client,a39599e376c82421e3e200188f46d3a652c4f63d,458489ac08d0af0bd2a0025fc71c6c9c2906a290,org.apache.qpid.jms.provider.amqp.message.AmqpJmsBytesMessageFacadeTest.testCopyOfContentType,False,[],,,,org.apache.qpid.jms.provider.amqp.message.amqpjmsmessagefacade.getcontenttype(),"u'diff --git a/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java b/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java\nindex e982bedc..e4196c89 100644\n--- a/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java\n+++ b/qpid-jms-client/src/test/java/org/apache/qpid/jms/provider/amqp/message/AmqpJmsBytesMessageFacadeTest.java\n@@ -33,6 +33,7 @@ import java.util.ArrayList;\n import java.util.Arrays;\n \n import org.apache.qpid.proton.amqp.Binary;\n+import org.apache.qpid.proton.amqp.Symbol;\n import org.apache.qpid.proton.amqp.messaging.AmqpSequence;\n import org.apache.qpid.proton.amqp.messaging.AmqpValue;\n import org.apache.qpid.proton.amqp.messaging.Data;\n@@ -85,19 +86,6 @@ public class AmqpJmsBytesMessageFacadeTest extends AmqpJmsMessageTypesTestCase {\n         assertEquals(""Message reports unexpected length"", 0, amqpBytesMessageFacade.getBodyLength());\n     }\n \n-    @Test\n-    public void testNewMessageHasContentType() throws Exception {\n-        AmqpJmsBytesMessageFacade amqpBytesMessageFacade = createNewBytesMessageFacade();\n-\n-        Properties properties = amqpBytesMessageFacade.getProperties();\n-        assertNotNull(properties);\n-        assertNotNull(properties.getContentType());\n-\n-        String contentType = properties.getContentType().toString();\n-        assertNotNull(""content type should be set"", contentType);\n-        assertEquals(""application/octet-stream"", contentType);\n-    }\n-\n     // ---------- test for normal message operations -------------------------//\n \n     @Test\n@@ -171,6 +159,34 @@ public class AmqpJmsBytesMessageFacadeTest extends AmqpJmsMessageTypesTestCase {\n         assertDataBodyAsExpected(copy.getBody(), 0);\n     }\n \n+    @Test\n+    public void testCopyOfContentType() throws Exception {\n+        AmqpJmsBytesMessageFacade amqpBytesMessageFacade1 = createNewBytesMessageFacade();\n+        AmqpJmsBytesMessageFacade copy1 = amqpBytesMessageFacade1.copy();\n+        assertNull(copy1.getContentType());\n+\n+        AmqpJmsBytesMessageFacade amqpBytesMessageFacade2 = createNewBytesMessageFacade();\n+        Symbol contentType = Symbol.valueOf(""content-type"");\n+        amqpBytesMessageFacade2.setContentType(contentType);\n+\n+        AmqpJmsBytesMessageFacade copy2 = amqpBytesMessageFacade2.copy();\n+        assertEquals(contentType, copy2.getContentType());\n+    }\n+\n+    @Test\n+    public void testMessageToSendHasContentTypeSet() throws Exception {\n+        AmqpJmsBytesMessageFacade amqpBytesMessageFacade = createNewBytesMessageFacade();\n+        amqpBytesMessageFacade.onSend(0);\n+\n+        Properties properties = amqpBytesMessageFacade.getProperties();\n+        assertNotNull(properties);\n+        assertNotNull(properties.getContentType());\n+\n+        String contentType = properties.getContentType().toString();\n+        assertNotNull(""content type should be set"", contentType);\n+        assertEquals(""application/octet-stream"", contentType);\n+    }\n+\n     /**\n      * Test that copying a new messages which has a body and the copy has getOutputStream\n      * called which clears the message body doesn\'t affect the original.'"
